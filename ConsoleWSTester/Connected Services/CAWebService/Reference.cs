//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleTester.CAWebService
{


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace = "http://www.adonix.com/WSS", ConfigurationName = "CAWebService.CAdxWebServiceXmlCC")]
    public interface CAdxWebServiceXmlCC
    {

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style = System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults = true, Use = System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxParamKeyValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxMessage))]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "runReturn")]
        ConsoleTester.CAWebService.CAdxResultXml run(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, string inputXml);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "runReturn")]
        System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> runAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, string inputXml);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style = System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults = true, Use = System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxParamKeyValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxMessage))]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "saveReturn")]
        ConsoleTester.CAWebService.CAdxResultXml save(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, string objectXml);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "saveReturn")]
        System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> saveAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, string objectXml);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style = System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults = true, Use = System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxParamKeyValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxMessage))]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "deleteReturn")]
        ConsoleTester.CAWebService.CAdxResultXml delete(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "deleteReturn")]
        System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> deleteAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style = System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults = true, Use = System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxParamKeyValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxMessage))]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "readReturn")]
        ConsoleTester.CAWebService.CAdxResultXml read(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "readReturn")]
        System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> readAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style = System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults = true, Use = System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxParamKeyValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxMessage))]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "queryReturn")]
        ConsoleTester.CAWebService.CAdxResultXml query(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys, int listSize);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "queryReturn")]
        System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> queryAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys, int listSize);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style = System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults = true, Use = System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxParamKeyValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxMessage))]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "getDescriptionReturn")]
        ConsoleTester.CAWebService.CAdxResultXml getDescription(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "getDescriptionReturn")]
        System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> getDescriptionAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style = System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults = true, Use = System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxParamKeyValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxMessage))]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "actionObjectKeysReturn")]
        ConsoleTester.CAWebService.CAdxResultXml actionObjectKeys(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, string actionCode, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "actionObjectKeysReturn")]
        System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> actionObjectKeysAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, string actionCode, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style = System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults = true, Use = System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxParamKeyValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxMessage))]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "modifyReturn")]
        ConsoleTester.CAWebService.CAdxResultXml modify(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys, string objectXml);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "modifyReturn")]
        System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> modifyAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys, string objectXml);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style = System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults = true, Use = System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxParamKeyValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxMessage))]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "deleteLinesReturn")]
        ConsoleTester.CAWebService.CAdxResultXml deleteLines(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys, string blocKey, string[] lineKeys);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "deleteLinesReturn")]
        System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> deleteLinesAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys, string blocKey, string[] lineKeys);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style = System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults = true, Use = System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxParamKeyValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxMessage))]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "insertLinesReturn")]
        ConsoleTester.CAWebService.CAdxResultXml insertLines(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys, string blocKey, string lineKey, string lineXml);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "insertLinesReturn")]
        System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> insertLinesAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys, string blocKey, string lineKey, string lineXml);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style = System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults = true, Use = System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxParamKeyValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxMessage))]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "getDataXmlSchemaReturn")]
        ConsoleTester.CAWebService.CAdxResultXml getDataXmlSchema(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "getDataXmlSchemaReturn")]
        System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> getDataXmlSchemaAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style = System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults = true, Use = System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxParamKeyValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CAdxMessage))]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "actionObjectReturn")]
        ConsoleTester.CAWebService.CAdxResultXml actionObject(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, string actionCode, string objectXml);

        [System.ServiceModel.OperationContractAttribute(Action = "", ReplyAction = "*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name = "actionObjectReturn")]
        System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> actionObjectAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, string actionCode, string objectXml);
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2114.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "http://www.adonix.com/WSS")]
    public partial class CAdxCallContext : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string codeLangField;

        private string codeUserField;

        private string passwordField;

        private string poolAliasField;

        private string poolIdField;

        private string requestConfigField;

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public string codeLang
        {
            get => this.codeLangField;
            set
            {
                this.codeLangField = value;
                this.RaisePropertyChanged("codeLang");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public string codeUser
        {
            get => this.codeUserField;
            set
            {
                this.codeUserField = value;
                this.RaisePropertyChanged("codeUser");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public string password
        {
            get => this.passwordField;
            set
            {
                this.passwordField = value;
                this.RaisePropertyChanged("password");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public string poolAlias
        {
            get => this.poolAliasField;
            set
            {
                this.poolAliasField = value;
                this.RaisePropertyChanged("poolAlias");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public string poolId
        {
            get => this.poolIdField;
            set
            {
                this.poolIdField = value;
                this.RaisePropertyChanged("poolId");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public string requestConfig
        {
            get => this.requestConfigField;
            set
            {
                this.requestConfigField = value;
                this.RaisePropertyChanged("requestConfig");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2114.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "http://www.adonix.com/WSS")]
    public partial class CAdxParamKeyValue : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string keyField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public string key
        {
            get => this.keyField;
            set
            {
                this.keyField = value;
                this.RaisePropertyChanged("key");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public string value
        {
            get => this.valueField;
            set
            {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2114.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "http://www.adonix.com/WSS")]
    public partial class CAdxTechnicalInfos : object, System.ComponentModel.INotifyPropertyChanged
    {

        private bool busyField;

        private bool changeLanguageField;

        private bool changeUserIdField;

        private bool flushAdxField;

        private double loadWebsDurationField;

        private int nbDistributionCycleField;

        private double poolDistribDurationField;

        private int poolEntryIdxField;

        private double poolExecDurationField;

        private double poolRequestDurationField;

        private double poolWaitDurationField;

        private string processReportField;

        private int processReportSizeField;

        private bool reloadWebsField;

        private bool resumitAfterDBOpenField;

        private int rowInDistribStackField;

        private double totalDurationField;

        private string traceRequestField;

        private int traceRequestSizeField;

        /// <remarks/>
        public bool busy
        {
            get => this.busyField;
            set
            {
                this.busyField = value;
                this.RaisePropertyChanged("busy");
            }
        }

        /// <remarks/>
        public bool changeLanguage
        {
            get => this.changeLanguageField;
            set
            {
                this.changeLanguageField = value;
                this.RaisePropertyChanged("changeLanguage");
            }
        }

        /// <remarks/>
        public bool changeUserId
        {
            get => this.changeUserIdField;
            set
            {
                this.changeUserIdField = value;
                this.RaisePropertyChanged("changeUserId");
            }
        }

        /// <remarks/>
        public bool flushAdx
        {
            get => this.flushAdxField;
            set
            {
                this.flushAdxField = value;
                this.RaisePropertyChanged("flushAdx");
            }
        }

        /// <remarks/>
        public double loadWebsDuration
        {
            get => this.loadWebsDurationField;
            set
            {
                this.loadWebsDurationField = value;
                this.RaisePropertyChanged("loadWebsDuration");
            }
        }

        /// <remarks/>
        public int nbDistributionCycle
        {
            get => this.nbDistributionCycleField;
            set
            {
                this.nbDistributionCycleField = value;
                this.RaisePropertyChanged("nbDistributionCycle");
            }
        }

        /// <remarks/>
        public double poolDistribDuration
        {
            get => this.poolDistribDurationField;
            set
            {
                this.poolDistribDurationField = value;
                this.RaisePropertyChanged("poolDistribDuration");
            }
        }

        /// <remarks/>
        public int poolEntryIdx
        {
            get => this.poolEntryIdxField;
            set
            {
                this.poolEntryIdxField = value;
                this.RaisePropertyChanged("poolEntryIdx");
            }
        }

        /// <remarks/>
        public double poolExecDuration
        {
            get => this.poolExecDurationField;
            set
            {
                this.poolExecDurationField = value;
                this.RaisePropertyChanged("poolExecDuration");
            }
        }

        /// <remarks/>
        public double poolRequestDuration
        {
            get => this.poolRequestDurationField;
            set
            {
                this.poolRequestDurationField = value;
                this.RaisePropertyChanged("poolRequestDuration");
            }
        }

        /// <remarks/>
        public double poolWaitDuration
        {
            get => this.poolWaitDurationField;
            set
            {
                this.poolWaitDurationField = value;
                this.RaisePropertyChanged("poolWaitDuration");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public string processReport
        {
            get => this.processReportField;
            set
            {
                this.processReportField = value;
                this.RaisePropertyChanged("processReport");
            }
        }

        /// <remarks/>
        public int processReportSize
        {
            get => this.processReportSizeField;
            set
            {
                this.processReportSizeField = value;
                this.RaisePropertyChanged("processReportSize");
            }
        }

        /// <remarks/>
        public bool reloadWebs
        {
            get => this.reloadWebsField;
            set
            {
                this.reloadWebsField = value;
                this.RaisePropertyChanged("reloadWebs");
            }
        }

        /// <remarks/>
        public bool resumitAfterDBOpen
        {
            get => this.resumitAfterDBOpenField;
            set
            {
                this.resumitAfterDBOpenField = value;
                this.RaisePropertyChanged("resumitAfterDBOpen");
            }
        }

        /// <remarks/>
        public int rowInDistribStack
        {
            get => this.rowInDistribStackField;
            set
            {
                this.rowInDistribStackField = value;
                this.RaisePropertyChanged("rowInDistribStack");
            }
        }

        /// <remarks/>
        public double totalDuration
        {
            get => this.totalDurationField;
            set
            {
                this.totalDurationField = value;
                this.RaisePropertyChanged("totalDuration");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public string traceRequest
        {
            get => this.traceRequestField;
            set
            {
                this.traceRequestField = value;
                this.RaisePropertyChanged("traceRequest");
            }
        }

        /// <remarks/>
        public int traceRequestSize
        {
            get => this.traceRequestSizeField;
            set
            {
                this.traceRequestSizeField = value;
                this.RaisePropertyChanged("traceRequestSize");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2114.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "http://www.adonix.com/WSS")]
    public partial class CAdxMessage : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string messageField;

        private string typeField;

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public string message
        {
            get => this.messageField;
            set
            {
                this.messageField = value;
                this.RaisePropertyChanged("message");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public string type
        {
            get => this.typeField;
            set
            {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2114.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace = "http://www.adonix.com/WSS")]
    public partial class CAdxResultXml : object, System.ComponentModel.INotifyPropertyChanged
    {

        private CAdxMessage[] messagesField;

        private string resultXmlField;

        private int statusField;

        private CAdxTechnicalInfos technicalInfosField;

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public CAdxMessage[] messages
        {
            get => this.messagesField;
            set
            {
                this.messagesField = value;
                this.RaisePropertyChanged("messages");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public string resultXml
        {
            get => this.resultXmlField;
            set
            {
                this.resultXmlField = value;
                this.RaisePropertyChanged("resultXml");
            }
        }

        /// <remarks/>
        public int status
        {
            get => this.statusField;
            set
            {
                this.statusField = value;
                this.RaisePropertyChanged("status");
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable = true)]
        public CAdxTechnicalInfos technicalInfos
        {
            get => this.technicalInfosField;
            set
            {
                this.technicalInfosField = value;
                this.RaisePropertyChanged("technicalInfos");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CAdxWebServiceXmlCCChannel : ConsoleTester.CAWebService.CAdxWebServiceXmlCC, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CAdxWebServiceXmlCCClient : System.ServiceModel.ClientBase<ConsoleTester.CAWebService.CAdxWebServiceXmlCC>, ConsoleTester.CAWebService.CAdxWebServiceXmlCC
    {

        public CAdxWebServiceXmlCCClient()
        {
        }

        public CAdxWebServiceXmlCCClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public CAdxWebServiceXmlCCClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public CAdxWebServiceXmlCCClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public CAdxWebServiceXmlCCClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public ConsoleTester.CAWebService.CAdxResultXml run(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, string inputXml) => base.Channel.run(callContext, publicName, inputXml);

        public System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> runAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, string inputXml) => base.Channel.runAsync(callContext, publicName, inputXml);

        public ConsoleTester.CAWebService.CAdxResultXml save(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, string objectXml) => base.Channel.save(callContext, publicName, objectXml);

        public System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> saveAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, string objectXml) => base.Channel.saveAsync(callContext, publicName, objectXml);

        public ConsoleTester.CAWebService.CAdxResultXml delete(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys) => base.Channel.delete(callContext, publicName, objectKeys);

        public System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> deleteAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys) => base.Channel.deleteAsync(callContext, publicName, objectKeys);

        public ConsoleTester.CAWebService.CAdxResultXml read(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys) => base.Channel.read(callContext, publicName, objectKeys);

        public System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> readAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys) => base.Channel.readAsync(callContext, publicName, objectKeys);

        public ConsoleTester.CAWebService.CAdxResultXml query(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys, int listSize) => base.Channel.query(callContext, publicName, objectKeys, listSize);

        public System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> queryAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys, int listSize) => base.Channel.queryAsync(callContext, publicName, objectKeys, listSize);

        public ConsoleTester.CAWebService.CAdxResultXml getDescription(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName) => base.Channel.getDescription(callContext, publicName);

        public System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> getDescriptionAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName) => base.Channel.getDescriptionAsync(callContext, publicName);

        public ConsoleTester.CAWebService.CAdxResultXml actionObjectKeys(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, string actionCode, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys) => base.Channel.actionObjectKeys(callContext, publicName, actionCode, objectKeys);

        public System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> actionObjectKeysAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, string actionCode, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys) => base.Channel.actionObjectKeysAsync(callContext, publicName, actionCode, objectKeys);

        public ConsoleTester.CAWebService.CAdxResultXml modify(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys, string objectXml) => base.Channel.modify(callContext, publicName, objectKeys, objectXml);

        public System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> modifyAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys, string objectXml) => base.Channel.modifyAsync(callContext, publicName, objectKeys, objectXml);

        public ConsoleTester.CAWebService.CAdxResultXml deleteLines(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys, string blocKey, string[] lineKeys) => base.Channel.deleteLines(callContext, publicName, objectKeys, blocKey, lineKeys);

        public System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> deleteLinesAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys, string blocKey, string[] lineKeys) => base.Channel.deleteLinesAsync(callContext, publicName, objectKeys, blocKey, lineKeys);

        public ConsoleTester.CAWebService.CAdxResultXml insertLines(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys, string blocKey, string lineKey, string lineXml) => base.Channel.insertLines(callContext, publicName, objectKeys, blocKey, lineKey, lineXml);

        public System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> insertLinesAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, ConsoleTester.CAWebService.CAdxParamKeyValue[] objectKeys, string blocKey, string lineKey, string lineXml) => base.Channel.insertLinesAsync(callContext, publicName, objectKeys, blocKey, lineKey, lineXml);

        public ConsoleTester.CAWebService.CAdxResultXml getDataXmlSchema(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName) => base.Channel.getDataXmlSchema(callContext, publicName);

        public System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> getDataXmlSchemaAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName) => base.Channel.getDataXmlSchemaAsync(callContext, publicName);

        public ConsoleTester.CAWebService.CAdxResultXml actionObject(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, string actionCode, string objectXml) => base.Channel.actionObject(callContext, publicName, actionCode, objectXml);

        public System.Threading.Tasks.Task<ConsoleTester.CAWebService.CAdxResultXml> actionObjectAsync(ConsoleTester.CAWebService.CAdxCallContext callContext, string publicName, string actionCode, string objectXml) => base.Channel.actionObjectAsync(callContext, publicName, actionCode, objectXml);
    }
}
